@page "/mymessages/{messageId:int}"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using InformNotifications.Models

@if (dataRecieved)
{
    <div class="text-center">
        <h1>@sentMessage!.TimeDelivered</h1>
        <div class="mt-4 mb-4 lead text-start container">
            @* @sentMessage.Contents *@
            @foreach (var section in messageSeperated)
            {
                <div>@(section)</div>
            }
        </div>
    </div>
}
else if (dataFailed)
{
    <div class="text-center lead">Sorry, there is no message at this index</div>
}
else
{
    <div class="text-center lead">Loading...</div>
}

<div class="pb-4">
    <a href="/" class="text-decoration-none btn btn-outline-primary">Back</a>
    <button @onclick="DeleteMessage" class="btn btn-outline-danger float-end">Delete Message</button>
</div>

@code
{
    [Parameter]
    public int MessageId { get; set; }
    SentMessage? sentMessage;
    List<string> messageSeperated = new();
    bool dataRecieved = false;
    bool dataFailed = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            sentMessage = await HttpClient.GetFromJsonAsync<SentMessage>($"{NavigationManager.BaseUri}sentmessages/{MessageId}");
            dataRecieved = true;

            messageSeperated = sentMessage!.Contents.Split('\n').ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine(ex);
            dataFailed = true;
        }
    }

    void DeleteMessage()
    {
        dataRecieved = false;
        HttpClient.DeleteFromJsonAsync<SentMessage>($"{NavigationManager.BaseUri}sentmessages/{MessageId}");
        NavigationManager.NavigateTo("/");
    }
}
